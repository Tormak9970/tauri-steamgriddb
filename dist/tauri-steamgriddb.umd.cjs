(function(d,h){typeof exports=="object"&&typeof module<"u"?h(exports,require("@tauri-apps/api")):typeof define=="function"&&define.amd?define(["exports","@tauri-apps/api"],h):(d=typeof globalThis<"u"?globalThis:d||self,h(d["tauri-steamgriddb"]={},d.api))})(this,function(d,h){"use strict";var G=Object.defineProperty;var w=(d,h,y)=>h in d?G(d,h,{enumerable:!0,configurable:!0,writable:!0,value:y}):d[h]=y;var c=(d,h,y)=>(w(d,typeof h!="symbol"?h+"":h,y),y);class y{constructor(e){c(this,"key");c(this,"baseURL");c(this,"headers");var a,r;typeof e=="string"&&(e={key:e}),this.baseURL=(a=e.baseURL)!=null?a:"https://www.steamgriddb.com/api/v2",this.key=(r=e.key)!=null?r:"",this.headers={},e.headers&&(this.headers=Object.assign({},e.headers)),this.key?this.headers.Authorization=`Bearer ${this.key}`:process.emitWarning("API Key not provided, some methods won't work.")}buildQuery(e){const a=["styles","dimensions","mimes","types"],r=["nsfw","humor","epilepsy","oneoftag","page"],i={};return a.forEach(t=>{var s;(s=e[t])!=null&&s.length&&(i[t]=e[t].join(","))}),r.forEach(t=>{typeof e[t]<"u"&&(i[t]=e[t])}),i}async handleRequest(e,a,r={},i=null){var n,g,o,m,p,l,f;let t={headers:this.headers,method:e,params:r};i&&(t=Object.assign({},t,{formData:i}));let s;try{s=await h.http.fetch(`${this.baseURL}${a}`,t)}catch(u){throw u.message=(o=(g=(n=u.response.data)==null?void 0:n.errors)==null?void 0:g.join(", "))!=null?o:u.message,u}if(s!=null&&s.data.success)return(m=s.data.data)!=null?m:s.data.success;throw new Error((f=(l=(p=s.data)==null?void 0:p.errors)==null?void 0:l.join(", "))!=null?f:"Unknown SteamGridDB error.")}async searchGame(e){return await this.handleRequest("GET",`/search/autocomplete/${encodeURIComponent(e)}`)}async getGame(e){return await this.handleRequest("GET",`/games/${e.type}/${e.id}`)}async getGameById(e){return this.getGame({id:e,type:"id"})}async getGameBySteamAppId(e){return this.getGame({id:e,type:"steam"})}async getGrids(e){return await this.handleRequest("GET",`/grids/${e.type}/${e.id}`,this.buildQuery(e))}async getGridsById(e,a,r,i,t,s,n){return this.getGrids({type:"game",id:e,styles:a,dimensions:r,mimes:i,types:t,nsfw:s,humor:n})}async getGridsBySteamAppId(e,a,r,i,t,s,n){return this.getGrids({type:"steam",id:e,styles:a,dimensions:r,mimes:i,types:t,nsfw:s,humor:n})}async getHeroes(e){return await this.handleRequest("GET",`/heroes/${e.type}/${e.id}`,this.buildQuery(e))}async getHeroesById(e,a,r,i,t,s,n){return this.getHeroes({type:"game",id:e,styles:a,dimensions:r,mimes:i,types:t,nsfw:s,humor:n})}async getHeroesBySteamAppId(e,a,r,i,t,s,n){return this.getHeroes({type:"steam",id:e,styles:a,dimensions:r,mimes:i,types:t,nsfw:s,humor:n})}async getIcons(e){return await this.handleRequest("GET",`/icons/${e.type}/${e.id}`,this.buildQuery(e))}async getIconsById(e,a,r,i,t,s,n){return this.getIcons({type:"game",id:e,styles:a,dimensions:r,mimes:i,types:t,nsfw:s,humor:n})}async getIconsBySteamAppId(e,a,r,i,t,s,n){return this.getIcons({type:"steam",id:e,styles:a,dimensions:r,mimes:i,types:t,nsfw:s,humor:n})}async getLogos(e){return await this.handleRequest("GET",`/logos/${e.type}/${e.id}`,this.buildQuery(e))}async getLogosById(e,a,r,i,t,s,n){return this.getLogos({type:"game",id:e,styles:a,dimensions:r,mimes:i,types:t,nsfw:s,humor:n})}async getLogosBySteamAppId(e,a,r,i,t,s,n){return this.getLogos({type:"steam",id:e,styles:a,dimensions:r,mimes:i,types:t,nsfw:s,humor:n})}}d.SGDB=y,Object.defineProperties(d,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
