(function(d,h){typeof exports=="object"&&typeof module<"u"?h(exports,require("@tauri-apps/api")):typeof define=="function"&&define.amd?define(["exports","@tauri-apps/api"],h):(d=typeof globalThis<"u"?globalThis:d||self,h(d["tauri-steamgriddb"]={},d.api))})(this,function(d,h){"use strict";var w=Object.defineProperty;var I=(d,h,u)=>h in d?w(d,h,{enumerable:!0,configurable:!0,writable:!0,value:u}):d[h]=u;var y=(d,h,u)=>(I(d,typeof h!="symbol"?h+"":h,u),u);class u extends Error{constructor(s,a){super(s);y(this,"response");this.name="Request Error",this.response=a}}class f{constructor(e){y(this,"key");y(this,"baseURL");y(this,"headers");var s,a;typeof e=="string"&&(e={key:e}),this.baseURL=(s=e.baseURL)!=null?s:"https://www.steamgriddb.com/api/v2",this.key=(a=e.key)!=null?a:"",this.headers={},e.headers&&(this.headers=Object.assign({},e.headers)),this.key?this.headers.Authorization=`Bearer ${this.key}`:process.emitWarning("API Key not provided, some methods won't work.")}buildQuery(e){const s=["styles","dimensions","mimes","types"],a=["nsfw","humor","epilepsy","oneoftag","page"],i={};return s.forEach(r=>{var t;(t=e[r])!=null&&t.length&&(i[r]=e[r].join(","))}),a.forEach(r=>{typeof e[r]<"u"&&(i[r]=e[r])}),i}async handleRequest(e,s,a={},i=null){var n,c,g,o,m,p,l;let r={headers:this.headers,method:e,params:a};i&&(r=Object.assign({},r,{formData:i}));let t=await h.http.fetch(`${this.baseURL}/temp/${s}`,r);if(t.ok){if(t!=null&&t.data.success)return(n=t.data.data)!=null?n:t.data.success;throw new u((o=(g=(c=t.data)==null?void 0:c.errors)==null?void 0:g.join(", "))!=null?o:"Unknown SteamGridDB error.",t)}else throw new u((l=(p=(m=t.data)==null?void 0:m.errors)==null?void 0:p.join(", "))!=null?l:"SteamGridDB error.",t)}async searchGame(e){return await this.handleRequest("GET",`/search/autocomplete/${encodeURIComponent(e)}`)}async getGame(e){return await this.handleRequest("GET",`/games/${e.type}/${e.id}`)}async getGameById(e){return this.getGame({id:e,type:"id"})}async getGameBySteamAppId(e){return this.getGame({id:e,type:"steam"})}async getGrids(e){return await this.handleRequest("GET",`/grids/${e.type}/${e.id}`,this.buildQuery(e))}async getGridsById(e,s,a,i,r,t,n){return this.getGrids({type:"game",id:e,styles:s,dimensions:a,mimes:i,types:r,nsfw:t,humor:n})}async getGridsBySteamAppId(e,s,a,i,r,t,n){return this.getGrids({type:"steam",id:e,styles:s,dimensions:a,mimes:i,types:r,nsfw:t,humor:n})}async getHeroes(e){return await this.handleRequest("GET",`/heroes/${e.type}/${e.id}`,this.buildQuery(e))}async getHeroesById(e,s,a,i,r,t,n){return this.getHeroes({type:"game",id:e,styles:s,dimensions:a,mimes:i,types:r,nsfw:t,humor:n})}async getHeroesBySteamAppId(e,s,a,i,r,t,n){return this.getHeroes({type:"steam",id:e,styles:s,dimensions:a,mimes:i,types:r,nsfw:t,humor:n})}async getIcons(e){return await this.handleRequest("GET",`/icons/${e.type}/${e.id}`,this.buildQuery(e))}async getIconsById(e,s,a,i,r,t,n){return this.getIcons({type:"game",id:e,styles:s,dimensions:a,mimes:i,types:r,nsfw:t,humor:n})}async getIconsBySteamAppId(e,s,a,i,r,t,n){return this.getIcons({type:"steam",id:e,styles:s,dimensions:a,mimes:i,types:r,nsfw:t,humor:n})}async getLogos(e){return await this.handleRequest("GET",`/logos/${e.type}/${e.id}`,this.buildQuery(e))}async getLogosById(e,s,a,i,r,t,n){return this.getLogos({type:"game",id:e,styles:s,dimensions:a,mimes:i,types:r,nsfw:t,humor:n})}async getLogosBySteamAppId(e,s,a,i,r,t,n){return this.getLogos({type:"steam",id:e,styles:s,dimensions:a,mimes:i,types:r,nsfw:t,humor:n})}async deleteGrids(e){const s=Array.isArray(e)?e.join(","):e.toString();return await this.handleRequest("DELETE",`/grids/${Array.isArray(s)?s.join(","):s}`)}}d.RequestError=u,d.SGDB=f,Object.defineProperties(d,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
